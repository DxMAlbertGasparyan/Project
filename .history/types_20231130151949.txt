Basic types int TypeScript:::



let isDone:boolean = false; \\ popoxakani tipy boolean
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
let decimal:number =6;
let hex: number = 0xf00d;    \\\ logikan?
let binary: number = 0b1010;  \\\ logikan?  \\\\\\ NUMBER TYPE
let octal: number = 0o744;     \\\ logikan?
let big:bigint =100n;
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
let color: string = "blue";
color = 'red';                  STRING TYPE

let fullName: string = `Bob Bobbington`;
let age: number = 37;
let sentence: string = `Hello, my name is ${fullName}.
 
I'll be ${age + 1} years old next month.`;  SRING AND NUMBER PAIR EXAMPLE

\\\\\\\\\\\\\\\\\\\\\\\\\\\ ARRAY 

let list: number[]  \\ ARRAY VORY YNDUNUM E NUMBER TYPE

let list: Array<number> = [1,2,3]  \\\ stexcum enq array generici mijocov talis enq type

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ Tuple type      
 let x:[string, number]; tuplei mijocov stexcecinq zangvac vory uni 2 index yev nshecinq typery te inch typer e yndunelu amen index;


 \\\\\\\\\\\\\\\\\\\\\\\\ ENUM  


 enum Color {
  Red,
  Green,
  Blue,
}
let c: Color = Color.Green;